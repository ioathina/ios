/* definition of color palettes */
/* pseudo class selector which matches the html element to define 
our global variables or custom properties */
:root {
  /* variables names */
  --color-primary: #2584ff;
  --color-secondary: #00d9ff;
  --color-accent: #ff3400;
  --color-headings: #1b0760;
  --color-body: #918ca4;
  --color-body-darker: #5c5577;
  --color-border: #ccc;
  --border-radius: 30px;
}
*,
*::after,
*::before {
  box-sizing: border-box;
}
/* Typography */
/* pseudoselector define the color of the selected text */
::selection {
  background: var(--color-primary);
  color: #fff;
}
/* font-size: 16px; is set by default by the browser
   62.5% of 16px = 10px = 1rem */
html {
  font-size: 62.5%;
}
img {
  width: 100%;
}
/* colors and fonts for all text */
body {
  font-family: Inter, Arial, Helvetica, sans-serif;
  font-size: 2.4rem;
  /* distance between the lines */
  line-height: 1.5; /* 1.5 times the current font size */
  color: var(--color-body);
}
/* color only for the headings */
h1,
h2,
h3 {
  color: var(--color-headings);
  margin-bottom: 1rem; /* creates distance between the headings and the paragraphs */
  line-height: 1.1;
}
/* 1 x font size of the html element */
h1 {
  font-size: 7rem;
}
h2 {
  font-size: 4rem;
}
h3 {
  font-size: 3rem;
  font-weight: 500;
}
p {
  margin-top: 0; /* the h3 headings define the margin above the paragraphs */
}
/* media query for screens that are larger than 1024px */
@media screen and (min-width: 1024px) {
  body {
    font-size: 1.8rem;
  }
  h1 {
    font-size: 8rem;
  }
  h2 {
    font-size: 4rem;
  }
  h3 {
    font-size: 2.4rem;
  }
}

/* Links */
/* creates a rule for the link component */
a {
  text-decoration: none;
}
/* defines a class for the link component */
.link-arrow {
  color: var(--color-accent);
  font-size: 2rem;
  font-weight: bold;
  text-transform: uppercase;
}
/* use of the 'after' pseudo element selector */
.link-arrow::after {
  content: "-->"; /* we can also use an icon */
  margin-left: 5px; /* better use px to maintain a standard distance */
  transition: margin 0.15s; /* animates the 'margin' property */
}
/* goes to the 'hover' state and targets the 'after' element */
.link-arrow:hover::after {
  margin-left: 10px; /* we increase the left margin */
}
/* better do define a media query for every section seperately */
@media screen and (min-width: 1024px) {
  .link-arrow {
    font-size: 1.5rem;
  }
}

/* Badges */
/* we use 'Object Oriented' CSS principles: 
   we seperate structure from skin */
/* 1st rule that defines the structure */
.badge {
  border-radius: 20px; /* absolute px values that do not depend on the font size */
  font-size: 2rem;
  font-weight: bold;
  padding: 0.5rem 2rem; /* 0.5rem for horizontal and 2rem for vertical padding */
  white-space: nowrap; /* prevents the 'badge' of wrapping to a second line */
}
/* 2nd rule that defines the skin */
/* BEM Block Element Modifier '--' 
   seperates a block or a component: 'badge'
   from a modifier: 'primary' 
   so we can achieve multiple combinations in the index.html */
.badge--primary {
  background: var(--color-primary); /* to use our 'primary' color */
  color: #fff; /* text color: white */
}
.badge--secondary {
  background: var(--color-secondary); /* to use our 'secondary' color */
  color: #fff; /* text color: white */
}
/* we create secondary skin for the small badges */
.badge--small {
  font-size: 1.6rem;
  padding: 0.5rem 1.5rem; /* 0.5 for vertican and 1.5 for horizontal */
}
@media screen and (min-width: 1024px) {
  .badge {
    font-size: 1.5rem;
  }
  .badge--small {
    font-size: 1.2rem;
  }
}

/* Lists */
/* we use 'Object Oriented' CSS principles: 
   we seperate structure from skin */
/* define a 'list' class */
.list {
  list-style: none; /* to get rid of the default bullet point */
  padding-left: 0; /* to get rid of the padding that all browsers set by default */
  /* they inherit the color we have set for the 'Headings' */
}
/* BEM Block Element Modifier '--' 
   seperates a block 'list' from its elements 'item'
   so we can achieve multiple combinations in the index.html */
/* creates an inline list variation */
/* we target items with the class of 'list__item' */
.list--inline .list__item {
  display: inline-block; /* with 'block' after 'inline' we are able to apply margins */
  margin-right: 2rem; /* to create distance between the items */
}
.list--tick {
  list-style-image: url(/images/tick.svg);
  padding-left: 3rem; /* the list by default pushes the icons out of the screen */
  color: var(--color-headings);
}
/* this is nesting */
.list--tick .list__item {
  padding-left: 0.5rem;
  margin-bottom: 1rem;
  font-size: 2rem;
}
@media screen and (min-width: 1024px) {
  .list--tick .list__item {
    padding-left: 0;
  }
}

/* Icons */
.icon {
  width: 40px;
  height: 40px;
}
.icon--small {
  width: 30px;
  height: 30px;
}
/* BEM Block Element Modifier 'Object Oriented' principles */
/* we define seperate skins for these icons */
/* for the first one we want to use the 'primary' color */
.icon--primary {
  fill: var(--color-primary);
}
/* a single line '-' because here we create a completely new class no BEM */
.icon-container {
  background: #f3f9fa;
  width: 64px; /* we use absolute px values to maintain the same distance */
  height: 64px;
  border-radius: 100%;
  /* 'spans' are inline elements so we need to change their orientation. 
      we use 'inline-flex' because if we place it next to an other element
      they still need to stay in line  
      we use 'flex' to centralize the icon */
  display: inline-flex;
  /* aligns the item to the main axis which is by default the horizontal axis */
  justify-content: center;
  /* aligns the item to the secondary axis which is by default the vertical axis */
  align-items: center;
}
.icon-container--accent {
  background: var(--color-accent);
}
.icon--white {
  fill: #fff;
}
/* Buttons */
.btn {
  border-radius: 40px;
  border: 0;
  cursor: pointer;
  font-size: 1.8rem;
  font-weight: 600;
  margin: 1rem 0;
  padding: 2rem 4vw; /* takes 4% of the vertical viewport */
  outline: 0;
  text-align: center;
  text-transform: uppercase;
  white-space: nowrap;
  color: #fff;
}
.btn .icon {
  width: 2rem;
  height: 2rem;
  margin-right: 1rem;
  vertical-align: middle;
}
.btn--outline {
  width: 100%;
  border: 0.2rem solid var(--color-headings);
  background: #fff;
  color: var(--color-headings);
  display: inline-block;
}
.btn--outline:hover {
  background: var(--color-headings);
  color: #fff;
}
.btn--stretched {
  padding-left: 6rem;
  padding-right: 6rem;
}
.btn--secondary {
  background: var(--color-secondary);
}
.btn--secondary:hover {
  background: #00c8eb;
}
.btn--accent {
  background: var(--color-accent);
}
.btn--accent:hover {
  background: #ec3000;
}
@media screen and (min-width: 1024px) {
  .btn {
    font-size: 1.5rem;
  }
}

/* Inputs */
.input {
  border-radius: var(--border-radius);
  border: 1px solid var(--color-border);
  color: var(--color-headings);
  font-size: 2rem;
  outline: 0; /* to get rid of the default border line */
  padding: 1.5rem 3.5rem;
}
::placeholder {
  color: #cbcdd7;
}
.input-group {
  border: 1px solid var(--color-border);
  border-radius: var(--border-radius);
  display: flex;
}
/* nesting, we have an 'input' within an 'input-group' */
.input-group .input {
  border: 0;
  flex-grow: 1; /* it makes the 'input' element to occupy 
                  all the available space within the 'input-group' */
  padding: 1.5rem 2rem;
  width: 0;
}
/* nesting, we have an 'button' within an 'input-group' */
.input-group .btn {
  margin: 4px;
}
@media screen and (min-width: 1024px) {
  .input {
    font-size: 1.5rem;
  }
}

/* Cards */
.card {
  border-radius: 7px;
  box-shadow: 0 0 20px 10px #f3f3f3;
  overflow: hidden;
}
.card__header,
.card__body {
  padding: 2rem 7%; /* 4wv takes 4% of the horizontal viewport*/
}
/* nesting, if we have a class called 'card--primary' 
   the 'card__header' takes the following rules */
.card--primary .card__header {
  background: var(--color-primary);
  color: #fff;
}
.card--secondary .card__header {
  background: var(--color-secondary);
  color: #fff;
}
/* nesting, if we have a secondary badge 'badge--secondary' 
   inside a secondary card 'card--secondary' it takes the following rules */
.card--secondary .badge--secondary {
  background: #02cdf1;
}
.card--primary .badge--primary {
  background: #126de4;
}

/* Plans */
.plan {
  transition: transform 0.2s ease-out;
}
.plan__name {
  color: #fff;
  margin: 0;
  font-weight: 500;
  font-size: 2.4rem;
}
.plan__price {
  font-size: 6rem;
}
.plan__billing-cycle {
  font-size: 2rem;
  font-weight: 300;
  opacity: 0.8;
  margin-right: 1rem;
}
.plan__description {
  font-size: 2rem;
  font-weight: 300;
  letter-spacing: 1px;
  display: block; /* place the text alway one line below */
}
.plan .list__item {
  margin-bottom: 2rem;
}

.plan--popular .card__header {
  position: relative;
}
/* pseudo selectors, if we have a 'plan' that is 'popular'
   we want to insert something before of the 'card header' */
.plan--popular .card__header::before {
  content: url(/images/popular.svg);
  width: 40px;
  display: inline-block;
  position: absolute; /* in relation to the header position which is 'relative' */
  top: -6px;
  right: 5%;
}
.plan:hover {
  transform: scale(1.05);
}
.plan--popular:hover {
  transform: scale(1.15);
}
@media screen and (min-width: 1024px) {
  .plan--popular {
    transform: scale(1.1);
  }
  .plan__name {
    font-size: 1.4rem;
  }
  .plan__price {
    font-size: 5rem;
  }
  .plan__billing-cycle {
    font-size: 1.6rem;
  }
  .plan__description {
    font-size: 1.7rem;
  }
}

/* Media */
.media {
  display: flex; /* to enable 'flex-box' rules */
  margin-bottom: 4rem;
}
.media__title {
  margin-top: 0;
}
.media__body {
  margin: 0 2rem;
}
.media__image {
  margin-top: 1rem;
}

/* Quotes */
.quote {
  font-size: 3rem;
  font-style: italic;
  color: var(--color-body-darker);
  line-height: 1.3;
}
.quote__text::before {
  content: open-quote; /* to add quotation marks */
}
.quote__text::after {
  content: close-quote;
}
.quote__author {
  font-size: 2rem;
  font-weight: 500;
  font-style: normal;
  margin-bottom: 0;
}
.quote__company {
  font-style: normal;
  font-size: 1.5rem;
  color: var(--color-headings);
  opacity: 0.4;
}
.quote__line {
  position: relative; /* positions the line relatively to itself */
  bottom: 10px;
}
@media screen and (min-width: 1024px) {
  .quote {
    font-size: 2rem;
  }
  .quote__author {
    font-size: 2.4rem;
  }
  .quote__company {
    font-size: 1.6rem;
  }
}

/* Grids */
.grid {
  display: grid;
}
@media screen and (min-width: 768px) {
  .grid--1x2 {
    grid-template-columns: 1fr 1fr; /* use all the available space */
  }
}
@media screen and (min-width: 1024px) {
  .grid--1x2 {
    grid-template-columns: repeat(2, 1fr);
  }
}
@media screen and (min-width: 1024px) {
  .grid--1x3 {
    grid-template-columns: repeat(3, 1fr);
  }
}

/* Testimonials */
.testimonial {
  padding: 3rem;
}
.testimonial .quote {
  margin: 2rem 3rem;
  font-size: 1.6rem;
}
.testimonial__image {
  /* we need to enable 'relative' positioning to the container */
  position: relative;
  margin: 0 3rem;
}
.testimonial__image > .icon-container {
  /* we target the '.icon-container' that is directly inside the container */
  position: absolute;
  top: 3rem;
  right: -32px;
}
@media screen and (min-width: 768px) {
  .testimonial__image {
    margin: 0;
  }
  .testimonial .quote {
    margin-left: 6rem;
    font-size: 2.5rem;
    line-height: 1.5;
  }
}

/* Callouts */
.callout {
  padding: 4rem;
  border-radius: 5px;
}
.callout--primary {
  background: var(--color-primary);
  color: #fff;
}
.callout__heading {
  color: #fff;
  margin-top: 0;
  font-size: 3rem;
}
.callout .btn {
  justify-self: center; /* horizontal alignment: a property that is applied to a grid item */
  align-self: center; /* vertical alignment: a property that is applied to a grid item */
}
.callout__content {
  text-align: center;
}
@media screen and (min-width: 768px) {
  .callout .grid--1x2 {
    grid-template-columns: 1fr auto;
  }
  .callout__content {
    text-align: left;
    font-size: 2rem;
  }
  .callout .btn {
    justify-self: start;
    margin: 0 2rem;
  }
}

/* Collapsibles */
.collapsible__header {
  display: flex;
  justify-content: space-between; /* pushes elements to the ends of the container and add space between */
}
.collapsible__heading {
  margin-top: 0;
  font-size: 3rem;
}
.collapsible__chevron {
  transform: rotate(-90deg);
  transition: transform 0.3s;
}
/* trick to animate the text */
.collapsible__content {
  max-height: 0;
  overflow: hidden;
  transition: all 0.3s;
  opacity: 0;
}
.collapsible--expanded .collapsible__chevron {
  transform: rotate(0);
}
/* trick to animate the text */
.collapsible--expanded .collapsible__content {
  max-height: 100%;
  opacity: 1;
}

/* Blocks */
.container {
  max-width: 1140px;
  margin: 0 auto; /* equal vertical distribution at the sides of the block */
}
.block {
  --padding-vertical: 5rem;
  padding: var(--padding-vertical) 2rem;
}
.block__header {
  text-align: center;
  margin-bottom: 4rem;
}
.block__heading {
  margin-top: 0;
}
.block--dark {
  background: #000;
  color: #7b858b;
}
.block--dark h1,
.block--dark h2,
.block--dark h3 {
  color: #fff;
}
.block--skewed-right {
  clip-path: polygon(0% 0%, 100% 00%, 100% 100%, 0% 95%);
  padding-bottom: calc(var(--padding-vertical) + 4rem);
}
.block--skewed-left {
  clip-path: polygon(0% 0%, 100% 00%, 100% 80%, 0% 100%);
  padding-bottom: calc(var(--padding-vertical) + 4rem);
}

/* Navigation Bar */
.nav {
  background: #000;
  display: flex;
  justify-content: space-between;
  flex-wrap: wrap;
  padding: 1rem;
  align-items: center; /* aligns the items to the secondary axis which is the vertical one */
}
.nav__list {
  width: 100%;
  margin: 0;
}
.nav__item {
  padding: 0.5rem 2rem;
  border-bottom: 1px solid #222;
}
.nav__item:last-of-type {
  border-bottom: none;
}
/* direct child selector to target the 'a' anchor inside the 'nav__item' element */
.nav__item > a {
  color: #d2d0db;
  transition: color 0.3s;
}
.nav__item > a:hover {
  color: #fff;
}
.nav__toggler {
  opacity: 0.5;
  transition: box-shadow 0.15s;
  cursor: pointer;
}
/* we can select an element that has both these classes */
.nav.collapsible--expanded .nav__toggler {
  opacity: 1;
  box-shadow: 0 0 0 3px #666;
  border-radius: 5px;
}
.nav__brand {
  transform: translateY(5px);
  width: 150px;
}
@media screen and (min-width: 768px) {
  .nav__toggler {
    display: none;
  }
  .nav__list {
    width: auto;
    display: flex;
    font-size: 1.6rem;
    max-height: 100%;
    opacity: 1;
  }
  .nav__item {
    border: 0;
  }
}

/* Hero */
.hero {
  clip-path: polygon(0% 0%, 100% 00%, 100% 90%, 0% 100%);
}
.hero__tagline {
  font-size: 2rem;
  color: #b9c3cf;
  letter-spacing: 1px;
  margin: 2rem 0 5rem;
}
@media screen and (min-width: 768px) {
  .hero {
    padding-top: 0;
  }
  .hero__content {
    text-align: left;
    align-self: center;
  }
}

/* Domain Block */
/* in the block 'block-domain' the 'input-group'
   should follow the rules below */
.block-domain .input-group {
  box-shadow: 0 0 30px 20px #e6ebee;
  border: 0;
  margin: 4rem auto;
  max-width: 670px;
}
.block-domain__prices {
  color: var(--color-headings);
  display: grid;
  /* divides the space in 3 equal fractions */
  grid-template-columns: repeat(2, 1fr);
  /* the 6 sets the height of each row */
  grid-template-rows: repeat(2, 6rem);
  font-size: 2rem;
  font-weight: 600;
  /* for horizontal alignment */
  justify-items: center;
  max-width: 700px;
  margin: 0 auto;
}
@media screen and (min-width: 768px) {
  .block-domain__prices {
    /* 'auto-fit' it fits horizontaly as any items */
    grid-template-columns: repeat(auto-fit, minmax(10rem, 1fr));
  }
}

/* Plans Block */
.block-plans .grid {
  gap: 8rem 4rem;
}
.block-plans .card {
  max-width: 500px;
  margin: 0 auto;
}

/* Features Block */
.feature {
  gap: 4rem 2rem;
  margin: 12rem 0;
}
.feature:first-of-type {
  margin-top: 6rem;
}
.feature__heading {
  margin: 1rem 0;
}

@media screen and (min-width: 768px) {
  .feature:nth-of-type(even) .feature__content {
    order: 2;
  }
}

/* Showcase Block */
/* we target the img element so the image is responsive */
.block-showcase__picture > img {
  width: 100%; /* makes the image responsive */
}
@media screen and (min-width: 768px) {
  .block-showcase .grid {
    grid-template-columns: 50% 50%; /* 50% of the with of the container */
  }
  .block-showcase__picture {
    justify-self: end; /* it aligns it self at the end side of its column */
  }
  /* we target the img element so the image is responsive */
  .block-showcase__picture > img {
    width: auto; /* is displayed to its actual size */
    max-width: 700px;
  }
}

/* Footer */
.footer {
  background: #232323;
  padding-top: 10rem;
}
.footer a {
  color: #777;
  transition: color 0.3s;
}
.footer a:hover {
  color: #fff;
}
.footer__section {
  padding: 2rem;
  border-bottom: 1px solid #393939;
}
.footer__section .list {
  margin: 0;
}
.footer__heading {
  text-transform: uppercase;
  font-weight: 600;
  font-size: 2.5rem;
  line-height: 1.5;
}
.footer__brand {
  margin-top: 5rem;
  text-align: center;
}
.footer__brand img {
  /* TODO: Consider refactoring this and applying it to 
  all images. */
  width: 100%;
  max-width: 230px;
}
.footer__copyright {
  font-size: 2.1rem;
  color: #fff;
  opacity: 0.3;
}
@media screen and (min-width: 768px) {
  .footer {
    font-size: 1.5rem;
  }
  .footer__sections {
    grid-template-columns: repeat(auto-fit, minmax(10rem, 1fr));
  }
  .footer .collapsible__chevron {
    display: none;
  }
  .footer .collapsible__content {
    opacity: 1;
    max-height: 100%;
  }
  .footer__brand {
    order: -1;
    margin-top: 1rem;
  }
  .footer__copyright {
    font-size: 1.5rem;
  }
  .footer__section {
    border: 0;
  }
  .footer__heading {
    font-size: 1.6rem;
  }
}

/* Sign-up Callout */
.callout-signup {
  transform: translateY(5rem);
}
